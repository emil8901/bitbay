{"version":3,"sources":["contexts/GlobalContext/types.ts","contexts/OrderBookContext/types.ts","contexts/GlobalContext/index.tsx","contexts/OrderBookContext/index.tsx","components/OrderRow/OrderRow.styles.ts","components/OrderRow/index.tsx","containers/orderBook/OrderBook.styles.ts","contexts/StatsContext/index.tsx","contexts/TickerContext/index.tsx","components/Spread/index.tsx","components/Stats/index.tsx","containers/orderBook/index.tsx","Global.styles.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CurrencyPairTypes","EntryTypes","GlobalContext","createContext","state","BTCPLN","setCurrencyPair","currencyPair","GlobalContextProvider","children","useState","setState","Provider","value","initialState","buyOrder","sellOrder","OrderBookContext","OrderBookProvider","websocketPath","useContext","useEffect","websocket","WebSocket","process","onopen","msg","action","module","path","send","JSON","stringify","onmessage","event","data","parse","message","changes","entryType","BUY","prevState","buyOrderTemp","slice","unshift","SELL","sellOrderTemp","close","OrderRow","styled","div","ask","amountOfCryptocurrency","ca","exchangeRate","ra","cost","parseFloat","toFixed","co","OrderBook","OrderBookContainer","OrderBookHeader","OrderBookList","OrderBookListTitle","min24","max24","StatsContext","StatsProvider","h","l","spread","TickerContext","TickerProvider","highestBid","lowestAsk","Spread","Stats","onChange","e","target","ETHPLN","map","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8d21b3b.chunk.js","sourcesContent":["export enum CurrencyPairTypes {\r\n  BTCPLN = \"btc-pln\",\r\n  ETHPLN = \"eth-pln\",\r\n}\r\n","export enum EntryTypes {\r\n  BUY = \"Buy\",\r\n  SELL = \"Sell\",\r\n}\r\n\r\nexport interface IState {\r\n  buyOrder: IWsResChanges[];\r\n  sellOrder: IWsResChanges[];\r\n}\r\n\r\ninterface IWsResChanges {\r\n  action: string;\r\n  entryType: EntryTypes;\r\n  marketCode: string;\r\n  rate: string;\r\n  state: { ca: string; co: number; pa: string; ra: string; sa: string };\r\n}\r\n\r\ninterface IWsResMessage {\r\n  changes: IWsResChanges[];\r\n  timestamp: string;\r\n}\r\n\r\nexport interface IWsRes {\r\n  action: string;\r\n  message: IWsResMessage;\r\n  seqNo: number;\r\n  timestamp: string;\r\n  topic: string;\r\n}\r\n","import React, { createContext, useState } from \"react\";\r\nimport { CurrencyPairTypes } from \"./types\";\r\n\r\nexport const GlobalContext = createContext<{\r\n  state: CurrencyPairTypes;\r\n  setCurrencyPair: Function;\r\n}>({\r\n  state: CurrencyPairTypes.BTCPLN,\r\n  setCurrencyPair: (currencyPair: CurrencyPairTypes) => {},\r\n});\r\n\r\nconst GlobalContextProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<CurrencyPairTypes>(\r\n    CurrencyPairTypes.BTCPLN\r\n  );\r\n\r\n  const setCurrencyPair = (currencyPair: CurrencyPairTypes) =>\r\n    setState(currencyPair);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ state, setCurrencyPair }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GlobalContextProvider;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"../GlobalContext\";\r\nimport { EntryTypes, IState, IWsRes } from \"./types\";\r\n\r\nconst initialState: IState = {\r\n  buyOrder: [],\r\n  sellOrder: [],\r\n};\r\n\r\nexport const OrderBookContext = createContext<IState>(initialState);\r\n\r\nconst OrderBookProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<IState>(initialState);\r\n  const { state: websocketPath } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const websocket = new WebSocket(process.env.REACT_APP_WS_PATH);\r\n\r\n    websocket.onopen = () => {\r\n      const msg = {\r\n        action: \"subscribe-public\",\r\n        module: \"trading\",\r\n        path: `orderbook/${websocketPath}`,\r\n      };\r\n\r\n      setState(initialState);\r\n\r\n      websocket.send(JSON.stringify(msg));\r\n    };\r\n\r\n    websocket.onmessage = (event) => {\r\n      const data: IWsRes = JSON.parse(event.data);\r\n\r\n      if (data.action !== \"push\") return;\r\n\r\n      const [{ entryType }] = data.message.changes;\r\n\r\n      switch (entryType) {\r\n        case EntryTypes.BUY:\r\n          setState((prevState) => {\r\n            const buyOrderTemp = prevState.buyOrder.slice();\r\n            buyOrderTemp.unshift(...data.message.changes);\r\n\r\n            return {\r\n              ...prevState,\r\n              buyOrder: buyOrderTemp,\r\n            };\r\n          });\r\n          break;\r\n        case EntryTypes.SELL:\r\n          setState((prevState) => {\r\n            const sellOrderTemp = prevState.sellOrder.slice();\r\n            sellOrderTemp.unshift(...data.message.changes);\r\n\r\n            return {\r\n              ...prevState,\r\n              sellOrder: sellOrderTemp,\r\n            };\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    return () => {\r\n      const msg = {\r\n        action: \"unsubscribe\",\r\n        module: \"trading\",\r\n        path: `orderbook/${websocketPath}`,\r\n      };\r\n\r\n      websocket.send(JSON.stringify(msg));\r\n      websocket.close();\r\n    };\r\n  }, [websocketPath]);\r\n\r\n  return (\r\n    <OrderBookContext.Provider value={state}>\r\n      {children}\r\n    </OrderBookContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderBookProvider;\r\n","import styled from \"styled-components\";\r\n\r\nconst OrderRow = styled.div<{ ask?: boolean }>`\r\n  display: flex;\r\n  padding: 6px 4px;\r\n  transition: 0.3s ease background;\r\n\r\n  &:nth-child(2n) {\r\n    background: #f7f7f7;\r\n  }\r\n\r\n  & > div {\r\n    display: flex;\r\n    flex: 1;\r\n    justify-content: center;\r\n    margin: 0 2px;\r\n  }\r\n\r\n  &:hover {\r\n    background: ${({ ask }) => {\r\n      return ask ? \"rgba(255, 0, 0, 0.3)\" : \"rgba(0, 255, 0, 0.3)\";\r\n    }};\r\n  }\r\n`;\r\n\r\nexport default { OrderRow };\r\n","import React from \"react\";\r\nimport SC from \"./OrderRow.styles\";\r\n\r\ninterface Props {\r\n  ask?: boolean;\r\n  state: any;\r\n}\r\n\r\nconst OrderRow: React.FC<Props> = ({ ask, state }) => {\r\n  const amountOfCryptocurrency = state.ca;\r\n  const exchangeRate = state.ra;\r\n\r\n  const cost = (\r\n    parseFloat(amountOfCryptocurrency) * parseFloat(exchangeRate)\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <SC.OrderRow ask={ask}>\r\n      <div>{exchangeRate}</div>\r\n      <div>{amountOfCryptocurrency}</div>\r\n      <div>{cost}</div>\r\n      <div>{state.co}</div>\r\n    </SC.OrderRow>\r\n  );\r\n};\r\n\r\nexport default OrderRow;\r\n","import styled from \"styled-components\";\r\n\r\nconst OrderBook = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst OrderBookContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  justify-content: center;\r\n  width: 800px;\r\n`;\r\n\r\nconst OrderBookHeader = styled.div`\r\n  background: rgba(31, 94, 190, 0.5);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n`;\r\n\r\nconst OrderBookList = styled.div`\r\n  display: flex;\r\n  min-height: 328px;\r\n  max-height: 328px;\r\n  overflow: hidden;\r\n  width: 100%;\r\n\r\n  & > div {\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst OrderBookListTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport default {\r\n  OrderBook,\r\n  OrderBookContainer,\r\n  OrderBookHeader,\r\n  OrderBookList,\r\n  OrderBookListTitle,\r\n};\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"../GlobalContext\";\r\nimport { IState, IWsRes } from \"./types\";\r\n\r\nconst initialState: IState = {\r\n  min24: null,\r\n  max24: null,\r\n};\r\n\r\nexport const StatsContext = createContext<IState>(initialState);\r\n\r\nconst StatsProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<IState>(initialState);\r\n  const { state: websocketPath } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const websocket = new WebSocket(process.env.REACT_APP_WS_PATH);\r\n\r\n    websocket.onopen = () => {\r\n      const msg = {\r\n        action: \"subscribe-public\",\r\n        module: \"trading\",\r\n        path: `stats/${websocketPath}`,\r\n      };\r\n\r\n      setState(initialState);\r\n\r\n      websocket.send(JSON.stringify(msg));\r\n    };\r\n\r\n    websocket.onmessage = (event) => {\r\n      const data: IWsRes = JSON.parse(event.data);\r\n\r\n      if (data.action !== \"push\") return;\r\n\r\n      const {\r\n        message: [{ h, l }],\r\n      } = data;\r\n\r\n      setState({\r\n        min24: l.toFixed(2),\r\n        max24: h.toFixed(2),\r\n      });\r\n    };\r\n\r\n    return () => {\r\n      const msg = {\r\n        action: \"unsubscribe\",\r\n        module: \"trading\",\r\n        path: `stats/${websocketPath}`,\r\n      };\r\n\r\n      websocket.send(JSON.stringify(msg));\r\n      websocket.close();\r\n    };\r\n  }, [websocketPath]);\r\n\r\n  return (\r\n    <StatsContext.Provider value={state}>{children}</StatsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StatsProvider;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"../GlobalContext\";\r\nimport { IState, IWsRes } from \"./types\";\r\n\r\nconst initialState: IState = {\r\n  spread: null,\r\n};\r\n\r\nexport const TickerContext = createContext<IState>(initialState);\r\n\r\nconst TickerProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<IState>(initialState);\r\n  const { state: websocketPath } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    const websocket = new WebSocket(process.env.REACT_APP_WS_PATH);\r\n\r\n    websocket.onopen = () => {\r\n      const msg = {\r\n        action: \"subscribe-public\",\r\n        module: \"trading\",\r\n        path: `ticker/${websocketPath}`,\r\n      };\r\n\r\n      setState(initialState);\r\n\r\n      websocket.send(JSON.stringify(msg));\r\n    };\r\n\r\n    websocket.onmessage = (event) => {\r\n      const data: IWsRes = JSON.parse(event.data);\r\n\r\n      if (data.action !== \"push\") return;\r\n\r\n      const {\r\n        message: { highestBid, lowestAsk },\r\n      } = data;\r\n\r\n      const spread = (parseFloat(lowestAsk) - parseFloat(highestBid)).toFixed(\r\n        2\r\n      );\r\n\r\n      setState({\r\n        spread,\r\n      });\r\n    };\r\n\r\n    return () => {\r\n      const msg = {\r\n        action: \"unsubscribe\",\r\n        module: \"trading\",\r\n        path: `ticker/${websocketPath}`,\r\n      };\r\n\r\n      websocket.send(JSON.stringify(msg));\r\n      websocket.close();\r\n    };\r\n  }, [websocketPath]);\r\n\r\n  return (\r\n    <TickerContext.Provider value={state}>{children}</TickerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TickerProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { TickerContext } from \"../../contexts/TickerContext\";\r\n\r\nconst Spread: React.FC = () => {\r\n  const { spread } = useContext(TickerContext);\r\n\r\n  return (\r\n    <div>\r\n      <div>spread {spread}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spread;\r\n","import React, { useContext } from \"react\";\r\nimport { StatsContext } from \"../../contexts/StatsContext\";\r\n\r\nconst Stats: React.FC = () => {\r\n  const { min24, max24 } = useContext(StatsContext);\r\n\r\n  return (\r\n    <div>\r\n      <div>24h max {max24}</div>\r\n      <div>24h min {min24}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React, { useContext } from \"react\";\r\nimport { OrderBookContext } from \"../../contexts/OrderBookContext\";\r\nimport { CurrencyPairTypes } from \"../../contexts/GlobalContext/types\";\r\nimport OrderRow from \"../../components/OrderRow\";\r\nimport SC from \"./OrderBook.styles\";\r\nimport { GlobalContext } from \"../../contexts/GlobalContext\";\r\nimport StatsProvider from \"../../contexts/StatsContext\";\r\nimport TickerProvider from \"../../contexts/TickerContext\";\r\nimport Spread from \"../../components/Spread\";\r\nimport Stats from \"../../components/Stats\";\r\n\r\nconst OrderBook: React.FC = () => {\r\n  const { setCurrencyPair } = useContext(GlobalContext);\r\n  const { buyOrder, sellOrder } = useContext(OrderBookContext);\r\n\r\n  const handleChange = (e: React.ChangeEvent<{ value: string }>) =>\r\n    setCurrencyPair(e.target.value);\r\n\r\n  return (\r\n    <SC.OrderBook>\r\n      <SC.OrderBookContainer>\r\n        <SC.OrderBookHeader>\r\n          <select onChange={handleChange}>\r\n            <option value={CurrencyPairTypes.BTCPLN}>BTC-PLN</option>\r\n            <option value={CurrencyPairTypes.ETHPLN}>ETH-PLN</option>\r\n          </select>\r\n          <TickerProvider>\r\n            <Spread />\r\n          </TickerProvider>\r\n          <StatsProvider>\r\n            <Stats />\r\n          </StatsProvider>\r\n        </SC.OrderBookHeader>\r\n        <SC.OrderBookList>\r\n          <div>\r\n            <SC.OrderBookListTitle>BID kupno</SC.OrderBookListTitle>\r\n            <div>\r\n              {buyOrder\r\n                .slice(0, 30)\r\n                .map(({ state }) =>\r\n                  state ? <OrderRow state={state} /> : null\r\n                )}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <SC.OrderBookListTitle>ASK sprzedaż</SC.OrderBookListTitle>\r\n            <div>\r\n              {sellOrder\r\n                .slice(0, 30)\r\n                .map(({ state }) =>\r\n                  state ? <OrderRow ask state={state} /> : null\r\n                )}\r\n            </div>\r\n          </div>\r\n        </SC.OrderBookList>\r\n      </SC.OrderBookContainer>\r\n    </SC.OrderBook>\r\n  );\r\n};\r\n\r\nexport default OrderBook;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    color: #222222;\r\n    font-family: 'Open Sans', sans-serif;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0; \r\n  }\r\n`;\r\n\r\nexport default { GlobalStyle };\r\n","import React from \"react\";\nimport GlobalContextProvider from \"./contexts/GlobalContext\";\nimport OrderBook from \"./containers/orderBook\";\nimport OrderBookProvider from \"./contexts/OrderBookContext\";\nimport SC from \"./Global.styles\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <SC.GlobalStyle />\n      <GlobalContextProvider>\n        <OrderBookProvider>\n          <OrderBook />\n        </OrderBookProvider>\n      </GlobalContextProvider>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}